README FILE for ~/geoData/ZCTA2012/*

When fully-formed, this directory contains hundreds of MB of data.  I
don't want to commit that to the git sourcebase, so I describe here
how to reconstruct it.

First, download all of the 2010 ZCTA shapefiles .zips from the US Census
Bureau.

http://www.census.gov/cgi-bin/geo/shapefiles2010/layers.cgi

(One may be tempted to download the great big file, "All states in one
national file" since it's just one click, but for performance reasons,
I think it's better to have all the smaller files)

Second, move all the .zips to this directory.

Third, unzip them all.

Fourth, convert them all to .kml using the script described below.

* * *

Shapefiles are a format developed by ESRI (the makers of ArcGIS) to
store and share geospatial data.  The collection of shapefiles (.shp)
and supporting data (.shp.xml, .prj, .dbf, .shx) in this directory
were obtained from the US Census Bureau on August 2012.  Each
shapefile contains all of the ZCTA boundaries for a given state; their
boundaries are based on the 2010 US Census.  For example
tl_2010_01_zcta510.shp contains all ZCTA boundaries for the state of
Alabama.

The collection of shapefiles may be converted to .kml format using the
bash script convertShpToKml.sh which invokes a GDAL utility ogr2ogr.
In .kml, it is straightforward to project the ZCTA boundaries on a
Google Earth map or a 2-D Google Map.  However, the Google Maps API
supports the KML format via its notion of "Layers" which are
manipulated as a single unit.  

If one desires to convert all .shp files to .kml in a single
directory, make sure that GDAL is installed and invoke this bash
script.  On a Mac, this goes like:

$ sudo port install gdal
$ sh convertShpToKml.sh

Other platforms may need to install GDAL in another manner.

If one just wants to convert a single .shp file to .kml,

$ ogr2ogr -f KML <targetfilename>.kml <sourcefilename>.shp

When the .shp files are converted to .kml, one might notice that .kml
is a human-readable format in which each ZCTA boundary of that state
is encoded as a big collection of WGS84 points, or what one more
informally calls, "Latitude/Longitude".  

When rendering the ZCTA files, one may notice that some areas of the
US are not covered.  As noted by the US Census Bureau on
http://www.census.gov/geo/ZCTA/zcta.html, "Large water bodies,
unpopulated land area, such as national parks, and sparsely populated
areas for which the USPS has not assigned ZIP Codes, were excluded
from the 2010 delineations. As a result, 2010 Census ZCTAs do not
cover the full extent of the nation."

One might also notice that the .kml files contain a whole bunch of
uninteresting data in their Schema.  I mean, probably interesting to,
say, a geographer, but not to an admissions type.  To convert the .kml
file to one with a smaller schema, one can use the python program,
cleanSimpleData.py.  Right now, this python file has the input file
and output file hardcoded.  The next checkin will correct this
unfashionable feature.

Once one has a .kml file (cleaned up or no), to render the resulting
.kml using the Google Maps Javascript 3 API, one can use the
FusionTablesLayer.  Import the .kml file to Google Docs as a
publicly-shared "Table", and from there one can use the
FusionTablesLayer object.  See geocode.js in this codebase for an
example of how to do this.

* * *

Glossary:

- GDAL: Geospatial Data Abstraction Library.
- KML: Keyhole Markup Language
- ZCTA boundary: an approximation of a zipcode boundary.  

Resources:

- Help with converting between formats in GDAL
http://levien.zonnetjes.net/?q=shapefiles